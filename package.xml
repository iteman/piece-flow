<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.7.1" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0
    http://pear.php.net/dtd/tasks-1.0.xsd
    http://pear.php.net/dtd/package-2.0
    http://pear.php.net/dtd/package-2.0.xsd">
 <name>Piece_Flow</name>
 <channel>pear.piece-framework.com</channel>
 <summary>A web flow engine and continuation server</summary>
 <description>Piece_Flow is a web flow engine and continuation server.

Piece_Flow provides a stateful programming model for developers, and high security for applications.</description>
 <lead>
  <name>KUBO Atsuhiro</name>
  <user>iteman</user>
  <email>iteman@users.sourceforge.net</email>
  <active>yes</active>
 </lead>
 <date>2008-07-28</date>
 <time>21:43:34</time>
 <version>
  <release>1.16.0</release>
  <api>1.7.0</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
 <notes>A new release of Piece_Flow is now available.

What&apos;s New in Piece_Flow 1.16.0

 * Enhanced interfaces: getActiveFlowExecutionTicket() has been added to the Piece_Flow_Continuation_Service class. It can be used to get the flow execution ticket for the active flow execution. And also isViewState() has been added to the Piece_Flow class. It can be used to get whether the current state of a flow execution is a view state or not.
 * Improved error handling: The behavior of internal error handling has been changed so as to handle only own and &quot;exception&quot; level errors.
 * A defect fix: A defect that the outer frame of an already removed flow execution to be created by garbage collection has been fixed.

See the following release notes for details.

Enhancements
============

- Added getActiveFlowExecutionTicket() to get the flow execution ticket for the active flow execution. (Piece_Flow_Continuation_FlowExecution, Piece_Flow_Continuation_Service)
- Added isViewState() to get whether the current state of a flow execution is a view state or not. (Piece_Flow)
- Changed the behavior of internal error handling so as to handle only own and &quot;exception&quot; level errors.
- Replaced all uses of PIECE_FLOW_ERROR_FLOW_NAME_NOT_GIVEN with PIECE_FLOW_ERROR_FLOW_ID_NOT_GIVEN.
- Changed the behavior of internal error handling that an exception from Stagehand_FSM is always wrapped with Piece_Flow_Error::push().

Defect Fixes
============

- Fixed a defect that the outer frame of an already removed flow execution to be created by garbage collection. (Piece_Flow_Continuation_FlowExecution)</notes>
 <contents>
  <dir baseinstalldir="/" name="/">
   <dir name="data">
    <file name="piece-flow.rng" role="data">
     <tasks:replace from="@package_version@" to="version" type="package-info" />
    </file>
    <file name="piece-flow.yaml" role="data">
     <tasks:replace from="@package_version@" to="version" type="package-info" />
    </file>
   </dir> <!-- /data -->
   <dir name="docs">
    <file name="LICENSE" role="doc">
     <tasks:replace from="@package_version@" to="version" type="package-info" />
    </file>
   </dir> <!-- /docs -->
   <dir name="Piece">
    <dir name="Flow">
     <dir name="Action">
      <file name="Factory.php" role="php">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
     </dir> <!-- /Piece/Flow/Action -->
     <dir name="ConfigReader">
      <file name="Common.php" role="php">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="PHPArray.php" role="php">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="XML4.php" role="php">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="XML5.php" role="php">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="YAML.php" role="php">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
     </dir> <!-- /Piece/Flow/ConfigReader -->
     <dir name="Continuation">
      <file name="FlowExecution.php" role="php">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="GC.php" role="php">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="Server.php" role="php">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="Service.php" role="php">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
     </dir> <!-- /Piece/Flow/Continuation -->
     <file name="Action.php" role="php">
      <tasks:replace from="@package_version@" to="version" type="package-info" />
     </file>
     <file name="ClassLoader.php" role="php">
      <tasks:replace from="@package_version@" to="version" type="package-info" />
     </file>
     <file name="Config.php" role="php">
      <tasks:replace from="@package_version@" to="version" type="package-info" />
     </file>
     <file name="ConfigReader.php" role="php">
      <tasks:replace from="@package_version@" to="version" type="package-info" />
     </file>
     <file name="Continuation.php" role="php">
      <tasks:replace from="@package_version@" to="version" type="package-info" />
     </file>
     <file name="Env.php" role="php">
      <tasks:replace from="@package_version@" to="version" type="package-info" />
     </file>
     <file name="Error.php" role="php">
      <tasks:replace from="@package_version@" to="version" type="package-info" />
     </file>
     <file name="EventHandler.php" role="php">
      <tasks:replace from="@package_version@" to="version" type="package-info" />
     </file>
     <file name="FSMBuilder.php" role="php">
      <tasks:replace from="@package_version@" to="version" type="package-info" />
     </file>
     <file name="ProtedtedEvent.php" role="php">
      <tasks:replace from="@package_version@" to="version" type="package-info" />
     </file>
    </dir> <!-- /Piece/Flow -->
    <file name="Flow.php" role="php">
     <tasks:replace from="@package_version@" to="version" type="package-info" />
    </file>
   </dir> <!-- /Piece -->
   <dir name="tests">
    <dir name="Piece">
     <dir name="Flow">
      <dir name="Action">
       <file name="BarAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="FactoryTestCase.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="FooAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="InvalidAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
      </dir> <!-- /tests/Piece/Flow/Action -->
      <dir name="ConfigReader">
       <dir name="XMLTestCase">
        <dir name="CacheIDsShouldBeUniqueInOneCacheDirectory1">
         <file name="New.xml" role="test">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
         </file>
        </dir> <!-- /tests/Piece/Flow/ConfigReader/XMLTestCase/CacheIDsShouldBeUniqueInOneCacheDirectory1 -->
        <dir name="CacheIDsShouldBeUniqueInOneCacheDirectory2">
         <file name="New.xml" role="test">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
         </file>
        </dir> <!-- /tests/Piece/Flow/ConfigReader/XMLTestCase/CacheIDsShouldBeUniqueInOneCacheDirectory2 -->
        <file name="broken.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInActionIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInActivityIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInEntryIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInExitIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInFinalActionIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInGuardIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInInitialActionIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="EventInTransitionIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="EventInTransitionNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="FirstStateIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="FirstStateNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="invalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInActionIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInActionNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInActivityIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInActivityNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInEntryIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInEntryNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInExitIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInExitNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInFinalActionIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInFinalActionNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInGuardIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInGuardNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInInitialActionIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInInitialActionNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInActionStateIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInActionStateNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInLastStateIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInLastStateNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInViewStateIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInViewStateNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NextStateInTransitionIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NextStateInTransitionNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="Registration.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ViewInLastStateIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ViewInLastStateNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ViewInViewStateIsInvalid.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ViewInViewStateNotFound.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ViewStateHasNoElements.xml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
       </dir> <!-- /tests/Piece/Flow/ConfigReader/XMLTestCase -->
       <dir name="YAMLTestCase">
        <dir name="CacheIDsShouldBeUniqueInOneCacheDirectory1">
         <file name="New.yaml" role="test">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
         </file>
        </dir> <!-- /tests/Piece/Flow/ConfigReader/YAMLTestCase/CacheIDsShouldBeUniqueInOneCacheDirectory1 -->
        <dir name="CacheIDsShouldBeUniqueInOneCacheDirectory2">
         <file name="New.yaml" role="test">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
         </file>
        </dir> <!-- /tests/Piece/Flow/ConfigReader/YAMLTestCase/CacheIDsShouldBeUniqueInOneCacheDirectory2 -->
        <file name="ClassInActionIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInActivityIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInEntryIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInExitIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInFinalActionIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInGuardIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ClassInInitialActionIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="EventInTransitionIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="EventInTransitionNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="FirstStateIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="FirstStateNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInActionIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInActionNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInActivityIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInActivityNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInEntryIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInEntryNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInExitIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInExitNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInFinalActionIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInFinalActionNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInGuardIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInGuardNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInInitialActionIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="MethodInInitialActionNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInActionStateIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInActionStateNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInLastStateIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInLastStateNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInViewStateIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NameInViewStateNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NextStateInTransitionIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="NextStateInTransitionNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="Registration.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ViewInLastStateIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ViewInLastStateNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ViewInViewStateIsInvalid.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ViewInViewStateNotFound.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ViewStateHasNoElements.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
       </dir> <!-- /tests/Piece/Flow/ConfigReader/YAMLTestCase -->
       <file name="CompatibilityTests.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="XML4TestCase.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="XML5TestCase.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="YAMLTestCase.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
      </dir> <!-- /tests/Piece/Flow/ConfigReader -->
      <dir name="ConfigReaderTestCase">
       <dir name="Piece">
        <dir name="Flow">
         <dir name="ConfigReader">
          <file name="Baz.php" role="test">
           <tasks:replace from="@package_version@" to="version" type="package-info" />
          </file>
         </dir> <!-- /tests/Piece/Flow/ConfigReaderTestCase/Piece/Flow/ConfigReader -->
        </dir> <!-- /tests/Piece/Flow/ConfigReaderTestCase/Piece/Flow -->
       </dir> <!-- /tests/Piece/Flow/ConfigReaderTestCase/Piece -->
       <file name="foo.flow" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="foo.xml" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="foo.yaml" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
      </dir> <!-- /tests/Piece/Flow/ConfigReaderTestCase -->
      <dir name="Continuation">
       <dir name="ServerTestCase">
        <dir name="Counter">
         <file name="One.flow" role="test">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
         </file>
         <file name="OneAction.php" role="test">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
         </file>
         <file name="Two.flow" role="test">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
         </file>
         <file name="TwoAction.php" role="test">
          <tasks:replace from="@package_version@" to="version" type="package-info" />
         </file>
        </dir> <!-- /tests/Piece/Flow/Continuation/ServerTestCase/Counter -->
        <file name="BindActionsWithFlowExecution.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="BindActionsWithFlowExecutionAction.php" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="CheckLastEvent.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="Counter.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="CounterAction.php" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="FlowExecutionExpired.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="SecondCounter.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="SecondCounterAction.php" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="Shutdown.yaml" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
        <file name="ShutdownAction.php" role="test">
         <tasks:replace from="@package_version@" to="version" type="package-info" />
        </file>
       </dir> <!-- /tests/Piece/Flow/Continuation/ServerTestCase -->
       <file name="ServerTestCase.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
      </dir> <!-- /tests/Piece/Flow/Continuation -->
      <dir name="ContinuationTestCase">
       <file name="BindActionsWithFlowExecution.yaml" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="BindActionsWithFlowExecutionAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="CheckLastEvent.yaml" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="Counter.yaml" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="CounterAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="FlowExecutionExpired.yaml" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="SecondCounter.yaml" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="SecondCounterAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="Shutdown.yaml" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="ShutdownAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
      </dir> <!-- /tests/Piece/Flow/ContinuationTestCase -->
      <dir name="EventHandlerTestCase">
       <file name="PieceFlowEventHandlerTestCaseNoMethodsAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="PieceFlowEventHandlerTestCasePieceFlowAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="PieceFlowEventHandlerTestCasePlainPHPAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
      </dir> <!-- /tests/Piece/Flow/EventHandlerTestCase -->
      <file name="ConfigReaderTestCase.php" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="ContinuationTestCase.php" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="EventHandlerTestCase.php" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
     </dir> <!-- /tests/Piece/Flow -->
     <dir name="FlowTestCase">
      <dir name="Piece">
       <file name="FlowCDPlayerAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="FlowInitialAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="FlowInvalidEventFromTransitionActionsOrActivitiesAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="FlowProblemThatActivityIsInvokedTwiceUnexpectedlyAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
       <file name="FlowTestCaseAction.php" role="test">
        <tasks:replace from="@package_version@" to="version" type="package-info" />
       </file>
      </dir> <!-- /tests/Piece/FlowTestCase/Piece -->
      <file name="CDPlayer.yaml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="initial.xml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="initial.yaml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="invalid.yaml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="InvalidEventFromTransitionActionsOrActivities.yaml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="OmitClassName.xml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="OmitClassName.yaml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="OmitClassNameAction.php" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="optional.xml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="optional.yaml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="ProblemThatActivityIsInvokedTwiceUnexpectedly.yaml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="ProtectedEvents.yaml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="ProtectedStates.yaml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
      <file name="Registration.yaml" role="test">
       <tasks:replace from="@package_version@" to="version" type="package-info" />
      </file>
     </dir> <!-- /tests/Piece/FlowTestCase -->
     <file name="FlowTestCase.php" role="test">
      <tasks:replace from="@package_version@" to="version" type="package-info" />
     </file>
    </dir> <!-- /tests/Piece -->
    <file name="prepare.php" role="test">
     <tasks:replace from="@package_version@" to="version" type="package-info" />
    </file>
   </dir> <!-- /tests -->
  </dir> <!-- / -->
 </contents>
 <dependencies>
  <required>
   <php>
    <min>4.3.0</min>
   </php>
   <pearinstaller>
    <min>1.4.3</min>
   </pearinstaller>
   <package>
    <name>Stagehand_FSM</name>
    <channel>pear.piece-framework.com</channel>
    <min>1.10.0</min>
   </package>
   <package>
    <name>Cache_Lite</name>
    <channel>pear.php.net</channel>
    <min>1.7.0</min>
   </package>
   <package>
    <name>PEAR</name>
    <channel>pear.php.net</channel>
    <min>1.4.3</min>
   </package>
  </required>
 </dependencies>
 <phprelease />
 <changelog>
  <release>
   <version>
    <release>1.16.0</release>
    <api>1.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2008-07-28</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>A new release of Piece_Flow is now available.

What&apos;s New in Piece_Flow 1.16.0

 * Enhanced interfaces: getActiveFlowExecutionTicket() has been added to the Piece_Flow_Continuation_Service class. It can be used to get the flow execution ticket for the active flow execution. And also isViewState() has been added to the Piece_Flow class. It can be used to get whether the current state of a flow execution is a view state or not.
 * Improved error handling: The behavior of internal error handling has been changed so as to handle only own and &quot;exception&quot; level errors.
 * A defect fix: A defect that the outer frame of an already removed flow execution to be created by garbage collection has been fixed.

See the following release notes for details.

Enhancements
============

- Added getActiveFlowExecutionTicket() to get the flow execution ticket for the active flow execution. (Piece_Flow_Continuation_FlowExecution, Piece_Flow_Continuation_Service)
- Added isViewState() to get whether the current state of a flow execution is a view state or not. (Piece_Flow)
- Changed the behavior of internal error handling so as to handle only own and &quot;exception&quot; level errors.
- Replaced all uses of PIECE_FLOW_ERROR_FLOW_NAME_NOT_GIVEN with PIECE_FLOW_ERROR_FLOW_ID_NOT_GIVEN.
- Changed the behavior of internal error handling that an exception from Stagehand_FSM is always wrapped with Piece_Flow_Error::push().

Defect Fixes
============

- Fixed a defect that the outer frame of an already removed flow execution to be created by garbage collection. (Piece_Flow_Continuation_FlowExecution)</notes>
  </release>
  <release>
   <version>
    <release>1.15.1</release>
    <api>1.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-11-25</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>A new release of Piece_Flow is now available.

What&apos;s New in Piece_Flow 1.15.1

 * Two defect fixes: A defect that caused a PIECE_FLOW_ERROR_FLOW_ID_NOT_GIVEN exception to be raised when being accessed an expired flow execution after sweeping it by the garbage collection has been fixed. And a defect that caused an undefined index notice to be raised if the action instances of the current context do not exist has been fixed.</notes>
  </release>
  <release>
   <version>
    <release>1.15.0</release>
    <api>1.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-11-13</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>A new release of Piece_Flow is now available.

What&apos;s New in Piece_Flow 1.15.0

 * New configuration system: A new configuration system using a directory where flow definition files exist and an extension of flow definition files has been supported. And the configuration system supports layered structure by using underscores in flow names as directory separators.

See the following release notes for details.

Enhancements
============

- Added a feature so that a continuation server can use each action directory individually.
- Changed the constructor so as to use the given cache directory as is. (Piece_Flow_ConfigReader_Common)
- Added a configuration reader for PHP array. (Piece_Flow_ConfigReader_PHPArray, Piece_Flow_ConfigReader)
- Added a feature so that instances of actions are kept with each context individually. (Piece_Flow_Action_Factory, Piece_Flow_Continuation_Server)
- Added PIECE_FLOW_ERROR_FLOW_ID_NOT_GIVEN. (Piece_Flow_Error)
- Changed the representation of flow identifier from &quot;flow name&quot; to &quot;flow ID&quot;. (Piece_Flow_Continuation_FlowExecution, Piece_Flow_Continuation_Service, Piece_Flow_Continuation_Server)
- Added setFlowIDCallback() and marked setFlowNameCallback() as deprecated. (Piece_Flow_Continuation_Server)
- Added support for new configuration system using a directory where flow definition files exist and an extension of flow definition files. (Ticket #35)
- Added getActiveFlowID()/getActiveFlowSource() which can be used to get the flow ID/source for the active flow execution. (Piece_Flow_Continuation_Server)</notes>
  </release>
  <release>
   <version>
    <release>1.14.0</release>
    <api>1.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-09-28</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>A new release of Piece_Flow is now available.

What&apos;s New in Piece_Flow 1.14.0

 * Two new interfaces for the continuation server: Two new interfaces for the continuation server have been available. One is Piece_Flow_Continuation_Service. The other is Piece_Flow_Continuation_Server. Piece_Flow_Continuation_Service is a service class which provides simple interfaces to access attributes of the active flow object and to get some information from flow executions. Users should use this class instead of Piece_Flow_Continuation from this release forward. Piece_Flow_Continuation_Server is a class which just provides the features for the continuation server only. Framework developers should use this class instead of Piece_Flow_Continuation from this release forward. Besides, Piece_Flow_Continuation has been deprecated.
 * A Defect Fix: A defect that caused the same cache to be used if the relative paths of the flow definition files are same even though the absolute paths of the files are different has been fixed.

See the following release notes for details.

Enhancements
============

- Added missing code for checking whether the flow execution has started or not to getCurrentStateName() and getPreviousStateName(). (Piece_Flow)
- Improved some error messages and comments. (Piece_Flow)
- Changed the visibility of isExclusive() to private. isExclusive() has been marked as deprecated. (Piece_Flow_Continuation)
- Refactored Piece_Flow_Continuation. It has been divided into some classes, and deprecated. (Ticket #30)
- Refactored Piece_Flow. (Ticket #32)

Defect Fixes
============

- Fixed the defect that caused the same cache to be used if the relative paths of the flow definition files are same even though the absolute paths of the files are different. (Ticket #34) (Piece_Flow_ConfigReader_Common)</notes>
  </release>
  <release>
   <version>
    <release>1.13.0</release>
    <api>1.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-08-26</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>A new release of Piece_Flow is now available.

What&apos;s New in Piece_Flow 1.13.0

 * Piece_Flow_Continuation::checkLastEvent(): This method can be used to check whether the last event which is given by a user is valid or not. And this method always return true if the continuation has not activated yet or just started.

See the following release notes for details.

Enhancements
============

- Changed read() so that a flow definition file with unknown extension is read as YAML. (Piece_Flow_ConfigReader)
- Added checkLastEvent() which can be used to check whether the last event which is given by a user is valid or not. (Piece_Flow_Continuation, Piece_Flow)</notes>
  </release>
  <release>
   <version>
    <release>1.12.0</release>
    <api>1.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-08-17</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>A new release of Piece_Flow is now available.

What&apos;s New in Piece_Flow 1.12.0

 * The target of the garbage collection changed: The target of the garbage collection has been changed from all flow executions to only non-exclusive flow executions.

See the following release notes for details.

Enhancements
============

- Changed the target of the garbage collection to only non-exclusive flow executions. (Piece_Flow_Continuation)</notes>
  </release>
  <release>
   <version>
    <release>1.11.0</release>
    <api>1.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-08-15</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>A new release of Piece_Flow is now available.

What&apos;s New in Piece_Flow 1.11.0

 * Garbage Collection: The garbage collection can be used for sweeping expired flow executions.
 * Environment settings: A flow definition file is always read when the current environment is not production.

See the following release notes for details.

Enhancements
============

- Changed the cached value format from array to Piece_Flow_Config. (Piece_Flow_ConfigReader_Common)
- Updated code so that a flow definition file is always read when the current environment is not production. (Ticket #26) (Piece_Flow_ConfigReader_Common)
- Added support for garbage collection for expired flow executions. (Ticket #16)
- Added code so as to clear the payload from the current flow execution to reduce the session size. (Piece_Flow_Continuation, Piece_Flow)
- Added code so as to call clear() if it exists to reduce the session size. (Piece_Flow_EventHandler)</notes>
  </release>
  <release>
   <version>
    <release>1.10.0</release>
    <api>1.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-07-02</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>A new release of Piece_Flow is now available.

What&apos;s New in Piece_Flow 1.10.0

 * Runtime Validation of Flow Definition: A flow definition is validated when it is loaded.

See the following release notes for details.

Enhancements
============ 

Web Flow Engine:

- Added validation of flow definition. (Ticket #23)
- Many minor improvements.</notes>
  </release>
  <release>
   <version>
    <release>1.9.0</release>
    <api>1.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2007-05-28</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>A new release of Piece_Flow is now available.

What&apos;s New in Piece_Flow 1.9.0

 * Plain Old PHP Object Support: A user-defined class can be used as an action without subclassing Piece_Flow_Action.

See the following release notes for details.

Enhancements
============ 

Web Flow Engine:

- Added a feature so that a user-defined class can be used as an action without subclassing Piece_Flow_Action. (Ticket #18)
- Updated invoke() and invokeAndTriggerEvent() so as to throw an exception if the method that will be called does not exist in an action class. (Ticket #20)</notes>
  </release>
  <release>
   <version>
    <release>1.8.0</release>
    <api>1.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-12-20</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>This release includes a feature named &quot;Action Continuation&quot; and several enhancements.

&quot;Action Continuation&quot; is a very important feature for developers. This feature will allow developers to write stateful action code via the properties without using flow attributes. This means that the programming be nearer natural continuation programming, although it is limited the scope in the action.

See the following release notes for details.

## Enhancements ##

### Piece_Flow_Continuation, Piece_Flow_Action_Factory ###

- Added a feature to store the action instances as a flow attribute in a flow execution, and restore the action instances when continuing the flow execution. (Ticket #13)

### Piece_Flow_Continuation ###

- Removed setActionDirectory().
- Changed to start a new flow execution if another flow execution of the current flow already exists in the flow executions. (Ticket #14)
- Added isExclusive() to check whether the curent flow execution is exclusive or not.
- Added getCurrentFlowName() to get the current flow name.

### Piece_Flow_Action_Factory ###

- Added clearInstances() to clear all instances of actions. (Ticket #12)
- Moved _load() to load() as a public method.</notes>
  </release>
  <release>
   <version>
    <release>1.7.0</release>
    <api>1.7.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-11-18</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>This release includes a security fix for a Cross Site Request Forgery (CSRF) vulnerability and a minor fix in the continuation server, and a few enhancements. See the following release notes for details.

## Enhancements ##

### Piece_Flow_Continuation ###

- Added getFlowExecutionTicketByFlowName() method for getting a flow execution ticket by the given flow name. (Ticket #5)

### Piece_Flow_Action_Invoker, Piece_Flow_Action ###

- Added the code so as to be able to prepare something for a callback before invoking the callback. (Ticket #6)

### Other Changes ###

- Changed so as to be able to omit the class attribute for a callback. If the class attribute is omitted, ClassNameAction class is used. (Ticket #8)

## Defect Fixes ##

### Piece_Flow_Continuation ###

- Changed the behaviour of preparing flow execution so as to require a flow execution ticket whenever continuing a flow execution even though what the flow execution mode is. (Ticket #2)
- Changed the behaviour of preparing flow execution so as to require a flow name whenever in multiple flow mode. (Ticket #3)</notes>
  </release>
  <release>
   <version>
    <release>1.6.0</release>
    <api>1.5.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-10-16</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>This is the first release with the new PEAR Channel Server pear.piece-framework.com.

This release includes a minor enhancement of Piece_Flow_Continuation class. See the following release notes for details.

## Enhancements ##

### Piece_Flow_Continuation ###
- Moved the location of setting $_currentFlowExecutionTicket and $_activated properties to _start()/_continue() methods for using Piece_Flow_Continuation objects in actions.</notes>
  </release>
  <release>
   <version>
    <release>1.5.0</release>
    <api>1.5.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-08-15</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>This release includes an enhancement and breaks backward compatibility as follows:

## Enhancements ##

- Introduced Piece_Flow_Action as the base class for Piece_Flow actions.
- Changed the interface of Piece_Flow actions so as to call setFlow(), setPayload(), and setEvent() methods for passing a Piece_Flow object, a payload, and the event name to an action instead of by the arguments of invoke() method.
- The original Piece_Flow_Action class has been renamed as Piece_Flow_Action_Invoker.</notes>
  </release>
  <release>
   <version>
    <release>1.4.1</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-07-28</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>This release includes two defect fixes and an enhancement as follows:

## Defect fixes ##

- Removed wrong error handling which disables the current callback.
- Removed &apos;@&apos; operator from include_once.

## Enhancements ##

- Changed the code so as to use $array[] = $value instead of array_push($array, $value).</notes>
  </release>
  <release>
   <version>
    <release>1.4.0</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-07-22</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>This release includes a few enhancements as follows:

## Enhancements ##

* Piece_Flow_Action
- Adjusted to changes in Stagehand_FSM package.

* Piece_Flow_ConfigReader_Common
- Changed the code so as to get the flow name from the current source.

* the schema of flow definitions
- Removed &apos;name&apos; attribute from &apos;flow&apos; element in piece-flow.rng.
- Removed &apos;name&apos; element in piece-flow.yaml.</notes>
  </release>
  <release>
   <version>
    <release>1.3.0</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-07-17</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>This release includes a few enhancements as follows:

## Enhancements ##

* Piece_Flow_Action
- Added support for raising an exception when an invalid event is returned from actions.

* Piece_Flow
- Changed the error code from PIECE_FLOW_ERROR_INVALID_OPERATION to PIECE_FLOW_ERROR_ALREADY_SHUTDOWN when triggering events after shutting down a flow.

* Piece_Flow_Continuation
- Changed the code so as never to start a new flow execution again after shtting down in single flow mode.

* Piece_Flow_Error
- Added PIECE_FLOW_ERROR_ALREADY_SHUTDOWN constant.
- Added PIECE_FLOW_ERROR_INVALID_EVENT constant.</notes>
  </release>
  <release>
   <version>
    <release>1.2.1</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-07-12</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>- Fixed the wrong version number of Stagehand_FSM package from 1.4.0 to 1.5.0.</notes>
  </release>
  <release>
   <version>
    <release>1.2.0</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-07-12</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>This release includes a few enhancements and fixing two problems as follows:

Enhancements:

* Piece_Flow
- Added support to prevent configuring protected events and states.
- Added error handling for failure to invoke actions.

* Example flow definitions
- Changed some state names and view names to conform the Spring Web Flow best practices.

Defect fixes:

- Fixed the problem that the protected events of the FSM can be triggered by users.
- Fixed the problem that &apos;entry&apos;, &apos;exit&apos;, and &apos;activity&apos; for the last state could not be added.</notes>
  </release>
  <release>
   <version>
    <release>1.1.1</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-07-07</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>This is a bug fix release.

- Fixed the problem that relative path cannot be used as the cache directory and action cirectory with Solaris.</notes>
  </release>
  <release>
   <version>
    <release>1.1.0</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-07-04</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>- Piece/Flow.php: Added removeAttribute()/clearAttributs() for removing attributes from flows.</notes>
  </release>
  <release>
   <version>
    <release>1.0.0</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <date>2006-06-19</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>The first stable release of Piece_Flow.</notes>
  </release>
  <release>
   <version>
    <release>0.4.0</release>
    <api>0.4.0</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <date>2006-04-21</date>
   <license uri="http://www.opensource.org/licenses/bsd-license.php">BSD License (revised)</license>
   <notes>The first release of Piece_Flow.</notes>
  </release>
 </changelog>
</package>
